// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                      String                  @id @default(uuid())
  name                    String                  @unique()
  email                   String                  @unique()
  password                String
  createAt                DateTime                @default(now())
  updateAt                DateTime                @updatedAt()
  operations              Operation[]
  categories              Category[]
  userRelationGroups      UserRelationGroupUser[]           
}

model UserRelationGroup {
  id              String          @id @default(uuid())
  name            String
  createAt        DateTime        @default(now())
  updateAt        DateTime        @updatedAt()
  users           UserRelationGroupUser[]
}

model UserRelationGroupUser {
  id                  String            @id @default(uuid())
  user                User              @relation(fields: [userId], references: [id])
  userId              String          
  userRelationGroup   UserRelationGroup @relation(fields: [userRelationGroupId], references: [id])
  userRelationGroupId String
}



model Operation {
  id              String          @id @default(uuid())
  name            String      
  category        Category        @relation(fields: [categoryId], references: [id])
  categoryId      String
  value           Int
  type            OperationType   @default(EXPENSE)
  createAt        DateTime        @default(now())
  updateAt        DateTime        @updatedAt()
  operationDate   DateTime
  user            User            @relation(fields: [userId], references: [id])
  userId          String
}

model Category {
  id              String          @id @default(uuid())
  name            String          
  createAt        DateTime        @default(now())
  updateAt        DateTime        @updatedAt()
  operations      Operation[]
  user            User?            @relation(fields: [userId], references: [id])
  userId          String?

  @@unique([name, userId])
}

enum OperationType {
  EXPENSE
  INCOME
}